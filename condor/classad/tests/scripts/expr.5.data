A = [
    value = foo==1;
    foo = bar;
    bar = foo
]
B = [
    ex2 = 1
]
result = UNDEFINED(Cyclic attribute definition)

A = [
    value = foo==1;
    foo = OTHER.bar
]
B = [
    bar = OTHER.foo
]
result = UNDEFINED(Cyclic attribute definition)

A = [
    value = a.b;
    a = [
        b = value
    ]
]
result = UNDEFINED(Cyclic attribute definition)

A = [
    value = a.b[0];
    a = [
        b = {
            value
        }
    ]
]
result = UNDEFINED(Cyclic attribute definition)

A = [
    a = [
        b = c?d:e;
        d = f;
        f = 1
    ];
    e = f;
    f = 2;
    c = true
].a.b
result = 1

A = [
    a = [
        b = c?d:e;
        d = f;
        f = 1
    ];
    e = f;
    f = 2;
    c = false
].a.b
result = 2

A = [
    a = [
        b = [
            c = d;
            d = 5
        ]
    ]
].a.b.c
result = 5

A = [
    a = {
        3,
        x
    };
    x = b.c;
    b = [
        c = 3
    ]
].a[1]
result = 3

A = [
    a = [
        b = [
            c = {
                3,
                d
            }
        ];
        d = {
            4,
            e
        }
    ];
    e = 1
].a.b.c[1][1]
result = 1

A = [
    a = [
        b = {
            c
        };
        c = 1
    ];
    c = 2
].a.b[0]
result = 1

A = [
    a = [
        b = c;
        c = 1
    ].b;
    c = 2
].a
result = 1

A = [
    a = [
        b = c
    ].b;
    c = 2
].a
result = 2

A = [
    x = 12;
    I = [
        y = 13;
        z = x+y
    ]
].I.z
result = 25

A = [
    x = B.y;
    A = [
        y = 2;
        z = x+y
    ];
    B = [
        y = 1
    ]
].A.z
result = 3

A = [
    a = {
        c
    };
    c = 1
].a
result = {
    c
}

A = [
    a = [
        b = c
    ];
    c = 1
].a
result = [
    b = c
]

A = [
    a = [
        b = c
    ];
    c = 1
].a.b
result = 1

A = [
    a = {
        [
            c = 1
        ],
        [
            c = 2
        ]
    }
].a.c
result = {
    1,
    2
}

A = [
    a = {
        b,
        c
    };
    b = [
        d = 1
    ];
    c = [
        d = 2
    ]
].a.d
result = {
    1,
    2
}

A = [
    a = [
        b = {
            [
                c = d
            ],
            [
                c = e
            ]
        };
        d = 1
    ];
    d = 2;
    e = 3
].a.b
result = {
    [
        c = d
    ],
    [
        c = e
    ]
}

A = [
    a = [
        b = {
            [
                c = d
            ],
            [
                c = e
            ]
        };
        d = 1
    ];
    d = 2;
    e = 3
].a.b.c[0]
result = 1

A = [
    a = [
        b = {
            [
                c = d
            ],
            [
                c = e
            ]
        };
        d = 1
    ];
    d = 2;
    e = 3
].a.b.c[1]
result = 3

A = {
    [
        a = [
            b = c
        ];
        c = 4
    ]
}[0].a.b
result = 4

A = {
    [
        a = [
            b = c
        ];
        c = 4
    ]
}.a[0].b
result = UNDEFINED(attribute c not found)

A = [
    a = {
        [
            b = [
                d = c
            ];
            c = 5
        ]
    };
    c = 4
].a[0].b.d
result = 5

A = [
    a = {
        [
            b = [
                d = c
            ];
            c = 5
        ]
    };
    c = 4
].a.b[0].d
result = UNDEFINED(attribute c not found)

A = {
    [
        a = [
            b = c
        ];
        c = 4
    ],
    [
        a = [
            b = c
        ];
        c = 5
    ]
}.a.b
result = {
    UNDEFINED(attribute c not found),
    UNDEFINED(attribute c not found)
}

A = [
    value = x.a;
    a = 1;
    x = [
        a = parent.a+1
    ]
]
result = 2

A = [
    value = x.y.z;
    a = 1;
    x = [
        b = a;
        y = [
            a = 2;
            z = parent.b
        ]
    ]
]
result = 1

A = [
    value = x.y;
    a = [
        b = 1
    ];
    b = 2;
    x = [
        y = parent.a.b;
        b = 3;
        a = [
            b = 4
        ]
    ]
]
result = 1

A = [
    value = parent.a;
    a = 1
]
result = UNDEFINED(No parent record)

A = [
    value = member("b",{
        "a",
        "b",
        "c"
    })
]
result = true

A = [
    value = member("B",{
        "a",
        "b",
        "c"
    })
]
result = true

A = [
    value = member("x",{
        "a",
        "b",
        "c"
    })
]
result = false

A = [
    a = 1;
    b = 2;
    c = 3;
    value = member(b,{
        a,
        b,
        c
    })
]
result = true

A = [
    a = 1;
    b = 2;
    c = 3;
    value = member(b,{
        1,
        2,
        3
    })
]
result = true

A = [
    value = member(2.0,{
        1,
        2,
        3
    })
]
result = true

A = [
    value = member(2,{
        1.0,
        2.0,
        3.0
    })
]
result = true

A = [
    value = member("a",[
        a = 1;
        b = 2
    ])
]
result = ERROR(member: arg 2 must be list, not classad)

A = [
    value = member("a",{
        [
            a = 1;
            b = 2
        ],
        "a",
        {
            1,
            2,
            3
        }
    })
]
result = true

A = [
    value = member(true,{
        "one",
        true,
        3
    })
]
result = true

A = [
    value = member(false,{
        "one",
        true,
        3
    })
]
result = false

A = [
    value = member({
        1,
        2,
        3
    },{
        "one",
        true,
        3
    })
]
result = ERROR(member: arg 1 must be constant, not list)

A = [
    value = member(1,true)
]
result = ERROR(member: arg 2 must be list, not boolean)

A = [
    value = member(1,[
        a = 1;
        b = 2
    ])
]
result = ERROR(member: arg 2 must be list, not classad)

A = [
    value = identicalMember("b",{
        "a",
        "b",
        "c"
    })
]
result = true

A = [
    value = identicalMember("B",{
        "a",
        "b",
        "c"
    })
]
result = false

A = [
    value = identicalMember("x",{
        "a",
        "b",
        "c"
    })
]
result = false

A = [
    a = 1;
    b = 2;
    c = 3;
    value = identicalMember(b,{
        a,
        b,
        c
    })
]
result = true

A = [
    a = 1;
    b = 2;
    c = 3;
    value = identicalMember(b,{
        1,
        2,
        3
    })
]
result = true

A = [
    value = identicalMember(2.0,{
        1,
        2,
        3
    })
]
result = false

A = [
    value = identicalMember(2,{
        1.0,
        2.0,
        3.0
    })
]
result = false

A = [
    value = identicalMember("a",[
        a = 1;
        b = 2
    ])
]
result = ERROR(identicalMember: arg 2 must be list, not classad)

A = [
    value = identicalMember("a",{
        [
            a = 1;
            b = 2
        ],
        "a",
        {
            1,
            2,
            3
        }
    })
]
result = true

A = [
    value = identicalMember(true,{
        "one",
        true,
        3
    })
]
result = true

A = [
    value = identicalMember(false,{
        "one",
        true,
        3
    })
]
result = false

A = [
    value = identicalMember({
        1,
        2,
        3
    },{
        "one",
        true,
        3
    })
]
result = ERROR(identicalMember: arg 1 must be constant, not list)

A = [
    value = identicalMember(1,true)
]
result = ERROR(identicalMember: arg 2 must be list, not boolean)

A = [
    value = identicalMember(1,[
        a = 1;
        b = 2
    ])
]
result = ERROR(identicalMember: arg 2 must be list, not classad)

